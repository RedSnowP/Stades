<?php

namespace Stades\StadesBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * StadesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StadesRepository extends EntityRepository
{
    /*public function getUrlMaps($id)
    {
        return $this
                ->createQueryBuilder('a')
                ->addSelect('a.lienMaps')
                ->where('a.id = :id')
                ->setParameter('id', $id)
                ->getQuery()
                ->getResult()
        ;
    }*/
    
    public function getLastStade()
    {
        return $this->createQueryBuilder('a')
                ->select('a.id, a.nomStade')
                ->orderBy('a.id', 'DESC')
                ->setMaxResults(1)
                ->getQuery()
                ->getResult()
        ;
    }
    
    public function getListStades($query)
    {
        $query = trim($query);
        $queryWithDash = str_replace(' ', '-', $query);
        
        $result = $this->createQueryBuilder('a')
                        ->select('a.id, a.nomStade')
                        ->where('a.nomStade LIKE :nomStade')
                        ->orWhere('a.nomStade LIKE :nomStadeWithDash')
                        ->setParameter('nomStade', '%'.$query.'%')
                        ->setParameter('nomStadeWithDash', '%'.$queryWithDash.'%')
                        ->orderBy('a.nomStade', 'ASC')
                        ->getQuery()
                        ->getResult();
        
        if ($result == null) {
            $secondQuery = explode(' ', $query);
            
            $result = $this->createQueryBuilder('a')->select('a.id, a.nomStade');
            
            foreach ($secondQuery as $key => $value) {
                if ($key == 0) {
                    $result->where('a.nomStade LIKE :nomStade'.$key)
                            ->setParameter('nomStade'.$key, '%'.$value.'%');
                }
                else {
                    $result->orWhere('a.nomStade LIKE :nomStade'.$key)
                            ->setParameter('nomStade'.$key, '%'.$value.'%');
                }
            }
            
            return $result->orderBy('a.nomStade', 'ASC')
                        ->getQuery()
                        ->getResult();
        }
        else {
            return $result;
        }
    }
    
    public function getCountStades() {
        return $this->createQueryBuilder('a')
                ->select('COUNT(a)')
                ->getQuery()
                ->getSingleScalarResult();
    }
}
